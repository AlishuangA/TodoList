{"version":3,"sources":["Input.js","List.js","TodoList.js","index.js"],"names":["Input","props","style","marginLeft","height","borderRadius","type","value","inpValue","onChange","e","handleChange","onClick","addTodo","List","todos","map","todo","index","done","key","toggle","checked","dangerouslySetInnerHTML","__html","title","delTodo","TodoList","setState","target","newTodos","JSON","parse","stringify","state","localStorage","setItem","alert","idx","filter","item","str","getItem","this","arr1","arr2","background","margin","fontSize","color","length","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44ce7d7c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Input=(props)=>{\r\n    return  <span>\r\n            <input style={{marginLeft:'100px',height:'22px',borderRadius:'5px'}}\r\n                type='text'\r\n                value={props.inpValue}\r\n                onChange={(e)=>props.handleChange(e)}/>\r\n            <button onClick={()=>props.addTodo()}>添加</button>\r\n        </span>\r\n            \r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst List=(props)=>{\r\n    return  props.todos.map((todo,index)=>{\r\n            if(props.done===todo.done){\r\n                return <li key={index}>\r\n\r\n                    <input\r\n                        onClick={()=>props.toggle(index)}\r\n                        checked={props.done}\r\n                        type='checkbox'\r\n                    />\r\n                    <span dangerouslySetInnerHTML={{__html:todo.title}}></span>\r\n                    <button onClick={()=>props.delTodo(index)}>删除</button>\r\n                </li>\r\n            }\r\n        })\r\n}\r\n\r\nexport default List;\r\n","import React,{Component} from 'react';\r\nimport Input from './Input.js';\r\nimport List from './List.js';\r\n\r\nclass TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            inpValue:'',\r\n            todos:[\r\n                {title:'1',done:false},\r\n                {title:'2',done:true},\r\n                {title:'3',done:true},\r\n                {title:'4',done:false}\r\n            ]\r\n        }\r\n    }\r\n\r\n    handleChange=(e)=>{\r\n        this.setState({inpValue:e.target.value})\r\n    }\r\n\r\n\r\n    toggle = (index)=>{\r\n        let newTodos = JSON.parse(JSON.stringify(this.state.todos))\r\n        newTodos[index].done = !newTodos[index].done;\r\n        this.setState({\r\n            todos:newTodos\r\n        },()=>{\r\n            localStorage.setItem(\r\n                'todos',\r\n                JSON.stringify(this.state.todos)\r\n            )\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        var str=localStorage.getItem(\"todos\")||\"[]\";\r\n        var todos=JSON.parse(str);\r\n        this.setState({todos})\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\"todos\",JSON.stringify(this.state.todos))\r\n    }\r\n\r\n    addTodo = () =>{\r\n        if(this.state.inpValue === \"\"){\r\n            alert(\"输入值不能为空！\");\r\n            return;\r\n        }\r\n        this.setState({\r\n            todos:[\r\n                {\r\n                    title:this.state.inpValue,\r\n                    done:false\r\n                },\r\n                ...this.state.todos\r\n            ]\r\n        },()=>{\r\n            localStorage.setItem(\r\n                'todos',\r\n                JSON.stringify(this.state.todos)\r\n            )\r\n        })\r\n    }\r\n\r\n    delTodo = (idx)=>{\r\n        this.setState({\r\n            todos:this.state.todos.filter((item,index)=>index!==idx)\r\n        },()=>{\r\n            localStorage.setItem(\r\n                'todos',\r\n                JSON.stringify(this.state.todos)\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const{todos,inpValue}=this.state;\r\n        let arr1 = todos.filter((item)=>!item.done)\r\n        let arr2 = todos.filter((item)=>item.done)\r\n        return <div style={{background:'grey',margin:'-8px',height:'570px'}}>\r\n            <div style={{margin:'-8px',background:'black',height:'50px',fontSize:'25px',color:'white'}}>\r\n                <div style={{marginLeft:'400px'}}>\r\n                    todolist\r\n                    <Input handleChange={this.handleChange} inpValue={inpValue} addTodo={this.addTodo}/>\r\n                </div>\r\n            </div>\r\n            <h2 style={{marginLeft:'390px'}}>正在进行{arr1.length}</h2>\r\n            <ul style={{marginLeft:'390px'}}>\r\n                <List delTodo={this.delTodo} toggle={this.toggle} todos={todos} done={false}/>\r\n            </ul>\r\n            <h2 style={{marginLeft:'390px'}}>已经完成{arr2.length}</h2>\r\n            <ul style={{marginLeft:'390px'}}>\r\n                <List delTodo={this.delTodo} toggle={this.toggle} todos={todos} done={true}/>\r\n            </ul>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './TodoList';\n\nReactDOM.render(\n    <TodoList />,\n    document.getElementById('root')\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import { render } from '@testing-library/react';\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import $ from 'jquery';\n// import Home from './Home';\n// import Demo01 from './Demo01';\n// import App from './App';\n//localhost:3000\n\n// import Hook from './Hook';\n// import Context from './Context';\n// ReactDOM.render(\n//     <div>\n//     <Context.Provider value='123'>\n//         <Hook />\n//     </Context.Provider>\n//     </div>,\n//     document.getElementById('root')\n// )\n\n\n\n\n\n\n\n\n// import Hoc from './Hoc';\n// ReactDOM.render(\n//     <div><Hoc /></div>,\n//     document.getElementById('root')\n// )\n\n\n\n\n\n\n\n// ReactDOM.render(\n//     <App />,\n//     document.getElementById('root')\n// );\n\n\n\n// alt shift + 上下键   复制一行\n// alt + 上下键         移动一行\n// 按住alt ，鼠标点击\n// Ctrl + shift + 左右键，选中整个单词\n// ctrl+shift+L \n\n\n// let List = (props)=>{\n//     return <ul>\n//         {\n//             props.data.map(\n//                 (item)=><li key={item.id}>{item.title}</li>\n//             )\n//         }\n//     </ul>\n// }\n  \n// const Buttons = ()=>{\n//     const btns = [1,2,3,4,5];\n//     const handleClick = (num)=>{\n//         //事件对象\n//         console.log(num);\n//     }\n//     return <div>\n//         {\n//             btns.map(\n//                 (item)=>\n//                     <button key={item} onClick={()=>this.getData(item)}>\n//                     {item}\n//                     </button>\n//             )\n//         }\n//     </div>\n// }\n  \n// class Home extends React.Component{\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             data:[]\n//         }\n//     }\n//     componentDidMount(){\n//         fetch('https://cnodejs.org/api/v1/topics')\n//         .then(res=>res.json())\n//         .then( ({data}) => {\n//             this.setState({data})\n//         })\n//     }\n//     handleClick = ()=>{\n//         console.log(\"hello\");\n//     }\n//     getData = (item)=>{\n//         fetch('https://cnodejs.org/api/v1/topics?page=' + item)\n//         .then(res=>res.json())\n//         .then( ({data}) => {\n//             this.setState({data})\n//         })\n//     }\n//     render(){\n//         const { data } = this.state;\n//         const btns = [1,2,3,4,5];\n//         const handleClick = (num)=>{\n//             console.log(num);\n//         }\n//         return <div>\n//             {\n//                 btns.map((item)=>(\n//                     <button key={item} onClick={()=>this.getData(item)}>\n//                         {item}\n//                     </button>\n//                 ))\n//             }\n//             {/* <button onClick={this.handleClick.bind(this)}>click</button>\n//             <Buttons /> */}\n//             <List data={data}/>\n//         </div>\n//     }\n// }\n  \n// ReactDOM.render(\n//     <Home data='abc'/>,\n//     document.getElementById('root')\n// );\n\n\n\n\n\n\n\n// import $ from 'jquery';\n// console.log($);\n \n// const List = (props)=>{\n//     return <ul>\n//         {\n//             props.data.map(\n//                 (item)=><li>{item.title}</li>\n//             )\n//         }\n//     </ul>\n// }\n\n// class Home extends React.Component{\n//     constructor(){\n//         super();\n//         this.state = {\n//             data:[]\n//         }\n//         fetch('https://cnodejs.org/api/v1/topics')\n//         .then(res=>res.json())\n//         .then(({data})=>{\n//             this.setState({data})\n//         })\n//     }\n//     // setTimeout(()=>{\n//     //   this.setState({data:[5,6,7,8,9]})\n//     // },500)\n//     render(){\n//         const {data} = this.state;\n//         return <List data = {data}/>\n//     }\n// }\n//     // return <ul>\n//     // {\n//     //     data.map(\n//     //       (item)=><li>{item}</li>\n//     //     )\n//     // }\n//     // </ul>\n\n// ReactDOM.render(\n//   <Home />,\n//   document.getElementById('root')\n// );\n\n\n\n\n\n// 组件声明\n// 函数组件\n// UI（展示）组件，木偶组件\n// function App(props){\n//   const { title, id } = props;\n//   return <div>\n//     <h1>App组件内容</h1>\n//     <div>{title}</div>\n//     <div>{id}</div>\n//   </div>\n// }\n// // 智能组件\n// class Demo extends React.Component{\n//   constructor(){\n//      super();\n//     //  声明状态\n//      this.state = {\n//        name: new Date().toLocaleString()\n//      }\n//      setInterval(()=>{\n//       this.setState({name:new Date().toLocaleString()})\n//      },1000)\n//   }\n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name} id='app'/>\n//     </div>\n//   }\n// }\n\n\n\n\n\n\n// let ele = React.createElement(\n//   'h1',\n//   {id:'title'},\n//   React.createElement('div',{},'hello'),\n//   'react'\n// )\n\n// 将jsx对象渲染到DOM中\n// let ReactDOM = {\n//   render(eleObj,container){\n//     // 解构\n//     const { type,props } = eleObj;\n//     // 创建第一层节点\n//     let ele = document.createElement(type);\n//     // 遍历属性对象，将属性添加到第一层节点对象上\n//     for (const prop in props) {\n//       console.log(prop)\n//       if(prop == 'children'){\n//         if(typeof props.children == 'string'){\n//             const txtNode = document.createTextNode(props.children);\n//             ele.appendChild(txtNode);\n//             break;\n//         }\n//         // 将第一层节点对象的子元素添加进去\n//         props.children.forEach( child => {\n//           if(typeof child == 'string'){\n//             const txtNode = document.createTextNode(child);\n//             ele.appendChild(txtNode);\n//           }else{\n//             ReactDOM.render(child,ele);\n//           }\n//         })\n//       }else{\n//         ele[prop] = props[prop];\n//       }\n//     }\n\n//     // 将第一层DOM节点添加到container中\n//     container.appendChild(ele);\n//   }\n// }\n\n\n\n\n\n\n  // 1、原生JS，DOM操作（jQ）\n  // 2、React：开发效率高、性能高\n  // 3、环境搭建、创建一个项目、运行\n  // 4、JSX语法\n\n\n\n/*\nlet ele=<h1 id=\"title\">hello react</h1>\n\nlet ele = React.createElement(\n    'h1',\n    {id:'title'},\n    React.createElement(div, {}, 'hello')\n)\n\nlet ele = React.createElement(\n    'h1',\n    {id:'title'},\n    'hello react'\n)\n*/\n\n\n\n/*\nlet ele = <h1 id='tltle' className='tit'>\n    react\n    <div>hello</div>\n    <div>hello</div>\n    <div>hello</div>\n    <div>hello</div>\n    <div>{['hello','react']}</div>\n</h1>\n\n\n\nlet ReactDom = {\n    //将js对象渲染到DOM上\n    render(eleObj,container){\n        //解构\n        const{type,props} = eleObj;\n        //创建第一层节点\n        let ele=document.createElement(type);\n        //遍历属性对象，将属性添加到第一层节点对象上\n        for(const prop in props){\n            if(prop == 'children'){\n                if(typeof props.children == 'string'){\n                    const txtNode = document.createTextNode(props[prop]);\n                    ele.appendChild(txtNode);\n                    break;\n                }\n\n                //将第一层节点对象的子元素添加上去\n                props.children.forEach(child => {\n                    if(typeof child == 'string'){\n                        const txtNode = document.createTextNode(child);\n                        ele.appendChild(txtNode);\n                    }else{\n                        ReactDom.render(child,ele);\n                    }\n                })\n                }else{\n                    ele[prop]=props[prop];\n                }\n        }\n        //将第一层节点添加\n        container.appendChild(ele);\n    }\n}\n\n\nReactDOM.render(\n    //<h1>hello react</h1>,\n    ele,\n    document.getElementById('root')\n);\n*/\n\n\n\n/*\n//组件声明，组件函数,智能组件\nfunction App(props){\n    const {title,id} = props;\n    return <div>\n        <div></div>\n        <div>{title}</div>\n        <div>{id}</div>\n    </div>\n}\n//智能组件\nclass Demo extends React.Component(){\n    constructor(){\n        super();\n        //声明状态\n        this.state = {\n            name: new Date().toLocaleString()\n        }\n        setTimeout(()=>{\n            this.setstate({name:'abc'})\n        },3000)\n    }\n    render(){\n        return <div>\n            <div>name:{this.state.name}</div>\n            <App title='任意值' id='app'/>,\n            <App title='任意值' id='app'/>,\n            <App title='任意值' id='app'/>,\n            <App title='任意值' id='app'/>,\n        </div>\n    }\n}\nReactDOM.render(\n    <Demo/>,\n    document.getElementById('root')\n);\n*/\n\n\n\n// class Home extends React.Component{\n//     constructor(){\n//       super();\n//       this.state = {\n//         data:[]\n//       }\n//       setTimeout(()=>{\n//         this.setState({data:[5,6,7,8,9]})\n//       },500)\n//     }\n//     render(){\n//       return <ul>\n//         {\n//           this.state.data.map(\n//             (item)=><li>{item}</li>\n//           )\n//         }\n//       </ul>\n//     }\n//   }\n  \n//   ReactDOM.render(\n//     <Home />,\n//     document.getElementById('root')\n//   );\n"],"sourceRoot":""}